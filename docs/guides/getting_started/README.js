Ext.data.JsonP.getting_started({"guide":"<h1 id='getting_started-section-getting-started'>Getting Started</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/getting_started-section-1.-creating-a-widget-instance'>1. Creating a widget instance</a></li>\n<li><a href='#!/guide/getting_started-section-2.-initializing-the-widget'>2. Initializing the widget</a></li>\n</ol>\n</div>\n\n<p>You can create and intialize the widget in 2 different ways or a combination of.</p>\n\n<h2 id='getting_started-section-1.-creating-a-widget-instance'>1. Creating a widget instance</h2>\n\n<p>You can do this in a controller:</p>\n\n<pre><code>var form = Alloy.createWidget('nl.fokkzb.form');\n</code></pre>\n\n<p>Or in a view:</p>\n\n<pre><code>&lt;Widget id=\"form\" src=\"nl.fokkezb.form\" /&gt;\n</code></pre>\n\n<h2 id='getting_started-section-2.-initializing-the-widget'>2. Initializing the widget</h2>\n\n<h3 id='getting_started-section-in-the-controller'>In the controller</h3>\n\n<p>When you create a widget instance:</p>\n\n<pre><code>var form = Alloy.createWidget('nl.fokkezb.nl', {\n    fieldsets: [{\n        legend: 'My form',          \n        fields: [{\n            name: 'name',\n            label: 'Your name',\n            type: 'text'\n        }]\n    }]\n});\n</code></pre>\n\n<p>Or later, e.g. after creating the instance in a view:</p>\n\n<pre><code>$.form.init({\n    fieldsets: [{\n        legend: 'My form',          \n        fields: [{\n            name: 'name',\n            label: 'Your name',\n            type: 'text'\n        }]\n    }]\n});\n</code></pre>\n\n<h3 id='getting_started-section-in-the-view%2C-using-a-configuration-file'>In the view, using a configuration file</h3>\n\n<p>You can also choose to specify a configuration file when you create a widget instance in a view:</p>\n\n<pre><code>&lt;Widget id=\"form\" src=\"nl.fokkezb.form\" config=\"myForm.js\" /&gt;\n</code></pre>\n\n<h4 id='getting_started-section-commonjs'>CommonJS</h4>\n\n<p>Or a CommonJS module using a path relative to <code>Resources</code> (not ending with <code>.js</code> of course):</p>\n\n<pre><code>module.exports = {\n    fieldsets: [{\n        legend: 'My form',          \n        fields: [{\n            name: 'name',\n            label: 'Your name',\n            type: 'text'\n        }]\n    }]\n};\n</code></pre>\n\n<h4 id='getting_started-section-json'>JSON</h4>\n\n<p>The value of <code>config</code> can either point to a JSON file using a path absolute or relative to <code>Resources</code>:</p>\n\n<pre><code>{\n    fieldsets: [{\n        legend: 'My form',          \n        fields: [{\n            name: 'name',\n            label: 'Your name',\n            type: 'text'\n        }]\n    }]\n}\n</code></pre>\n\n<p><strong>NOTE:</strong> Using JSON does not allow you to use <code>L()</code> for legends and labels or specify custom validators.</p>\n","title":"Getting Started"});